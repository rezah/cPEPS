%!PS-Adobe-2.0 EPSF-2.0
%%Title: particle16.eps
%%Creator: gnuplot 5.2 patchlevel 2
%%CreationDate: Sat May  2 20:44:12 2020
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 431 431
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 15.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -83 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 431 50 lineto 431 431 lineto 50 431 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (particle16.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 2)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat May  2 20:44:12 2020)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 250 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7632.00 7632.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor false def
/cF7 {sqrt} bind def	% sqrt(x)
/cF5 {dup dup mul mul} bind def	% x^3
/cF15 {360 mul sin} bind def	% sin(360x)
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
1.000 UP
% Begin plot #1
4.000 UP
1.000 UL
LTb
0 g .0033 g 1435 1560 PentF
.0116 g 1435 1878 PentF
.0212 g 1435 2195 PentF
.0282 g 1435 2513 PentF
.0301 g 1435 2830 PentF
.0274 g 1435 3148 PentF
.0229 g 1435 3465 PentF
.0202 g 1435 3783 PentF
.0213 g 1435 4099 PentF
.0262 g 1435 4417 PentF
.032 g 1435 4734 PentF
.0349 g 1435 5052 PentF
.0322 g 1435 5369 PentF
.024 g 1435 5687 PentF
.013 g 1435 6004 PentF
.0036 g 1435 6322 PentF
.0125 g 1753 1560 PentF
.0444 g 1753 1878 PentF
.0816 g 1753 2195 PentF
.1085 g 1753 2513 PentF
.116 g 1753 2830 PentF
.1057 g 1753 3148 PentF
.0883 g 1753 3465 PentF
.0775 g 1753 3783 PentF
.0816 g 1753 4099 PentF
.0999 g 1753 4417 PentF
.1219 g 1753 4734 PentF
.1331 g 1753 5052 PentF
.1229 g 1753 5369 PentF
.0914 g 1753 5687 PentF
.0494 g 1753 6004 PentF
.0139 g 1753 6322 PentF
.0264 g 2070 1560 PentF
.0937 g 2070 1878 PentF
.1721 g 2070 2195 PentF
.229 g 2070 2513 PentF
.2452 g 2070 2830 PentF
.2237 g 2070 3148 PentF
.1869 g 2070 3465 PentF
.1633 g 2070 3783 PentF
.171 g 2070 4099 PentF
.2085 g 2070 4417 PentF
.2537 g 2070 4734 PentF
.2767 g 2070 5052 PentF
.2557 g 2070 5369 PentF
.1903 g 2070 5687 PentF
.1028 g 2070 6004 PentF
.0288 g 2070 6322 PentF
.0429 g 2388 1560 PentF
.1524 g 2388 1878 PentF
.2802 g 2388 2195 PentF
.3731 g 2388 2513 PentF
.4001 g 2388 2830 PentF
.3654 g 2388 3148 PentF
.3052 g 2388 3465 PentF
.2655 g 2388 3783 PentF
.276 g 2388 4099 PentF
.3343 g 2388 4417 PentF
.4059 g 2388 4734 PentF
.4422 g 2388 5052 PentF
.4086 g 2388 5369 PentF
.304 g 2388 5687 PentF
.1643 g 2388 6004 PentF
.0461 g 2388 6322 PentF
.06 g 2705 1560 PentF
.2131 g 2705 1878 PentF
.392 g 2705 2195 PentF
.523 g 2705 2513 PentF
.5613 g 2705 2830 PentF
.5135 g 2705 3148 PentF
.4285 g 2705 3465 PentF
.3707 g 2705 3783 PentF
.382 g 2705 4099 PentF
.4598 g 2705 4417 PentF
.5564 g 2705 4734 PentF
.6061 g 2705 5052 PentF
.5597 g 2705 5369 PentF
.4165 g 2705 5687 PentF
.2251 g 2705 6004 PentF
.0631 g 2705 6322 PentF
.0747 g 3023 1560 PentF
.2651 g 3023 1878 PentF
.4884 g 3023 2195 PentF
.6524 g 3023 2513 PentF
.7021 g 3023 2830 PentF
.6436 g 3023 3148 PentF
.5374 g 3023 3465 PentF
.4624 g 3023 3783 PentF
.4714 g 3023 4099 PentF
.562 g 3023 4417 PentF
.6773 g 3023 4734 PentF
.7365 g 3023 5052 PentF
.6805 g 3023 5369 PentF
.5065 g 3023 5687 PentF
.2739 g 3023 6004 PentF
.0769 g 3023 6322 PentF
.0854 g 3340 1560 PentF
.3036 g 3340 1878 PentF
.5594 g 3340 2195 PentF
.7483 g 3340 2513 PentF
.8072 g 3340 2830 PentF
.7415 g 3340 3148 PentF
.6192 g 3340 3465 PentF
.5299 g 3340 3783 PentF
.5344 g 3340 4099 PentF
.6311 g 3340 4417 PentF
.7568 g 3340 4734 PentF
.8217 g 3340 5052 PentF
.7603 g 3340 5369 PentF
.5663 g 3340 5687 PentF
.3062 g 3340 6004 PentF
.086 g 3340 6322 PentF
.0911 g 3658 1560 PentF
.324 g 3658 1878 PentF
.598 g 3658 2195 PentF
.8009 g 3658 2513 PentF
.8655 g 3658 2830 PentF
.7964 g 3658 3148 PentF
.6651 g 3658 3465 PentF
.5662 g 3658 3783 PentF
.5652 g 3658 4099 PentF
.6615 g 3658 4417 PentF
.7905 g 3658 4734 PentF
.8574 g 3658 5052 PentF
.7939 g 3658 5369 PentF
.5916 g 3658 5687 PentF
.3202 g 3658 6004 PentF
.0899 g 3658 6322 PentF
.0907 g 3974 1560 PentF
.3227 g 3974 1878 PentF
.5958 g 3974 2195 PentF
.7996 g 3974 2513 PentF
.8646 g 3974 2830 PentF
.7968 g 3974 3148 PentF
.6654 g 3974 3465 PentF
.5645 g 3974 3783 PentF
.5588 g 3974 4099 PentF
.6499 g 3974 4417 PentF
.7743 g 3974 4734 PentF
.8399 g 3974 5052 PentF
.7766 g 3974 5369 PentF
.5792 g 3974 5687 PentF
.3136 g 3974 6004 PentF
.0881 g 3974 6322 PentF
.0839 g 4292 1560 PentF
.2986 g 4292 1878 PentF
.5519 g 4292 2195 PentF
.7411 g 4292 2513 PentF
.8024 g 4292 2830 PentF
.7402 g 4292 3148 PentF
.6185 g 4292 3465 PentF
.5233 g 4292 3783 PentF
.5151 g 4292 4099 PentF
.5958 g 4292 4417 PentF
.7081 g 4292 4734 PentF
.7673 g 4292 5052 PentF
.7096 g 4292 5369 PentF
.5293 g 4292 5687 PentF
.2867 g 4292 6004 PentF
.0806 g 4292 6322 PentF
.0714 g 4609 1560 PentF
.2545 g 4609 1878 PentF
.4703 g 4609 2195 PentF
.6316 g 4609 2513 PentF
.685 g 4609 2830 PentF
.6329 g 4609 3148 PentF
.5293 g 4609 3465 PentF
.4476 g 4609 3783 PentF
.4391 g 4609 4099 PentF
.5054 g 4609 4417 PentF
.5986 g 4609 4734 PentF
.6477 g 4609 5052 PentF
.5992 g 4609 5369 PentF
.447 g 4609 5687 PentF
.2421 g 4609 6004 PentF
.068 g 4609 6322 PentF
.0556 g 4927 1560 PentF
.1979 g 4927 1878 PentF
.3662 g 4927 2195 PentF
.4921 g 4927 2513 PentF
.5347 g 4927 2830 PentF
.4946 g 4927 3148 PentF
.4145 g 4927 3465 PentF
.3506 g 4927 3783 PentF
.3432 g 4927 4099 PentF
.3934 g 4927 4417 PentF
.4646 g 4927 4734 PentF
.5018 g 4927 5052 PentF
.4641 g 4927 5369 PentF
.346 g 4927 5687 PentF
.1875 g 4927 6004 PentF
.0527 g 4927 6322 PentF
.0391 g 5244 1560 PentF
.1395 g 5244 1878 PentF
.2581 g 5244 2195 PentF
.3474 g 5244 2513 PentF
.3775 g 5244 2830 PentF
.3497 g 5244 3148 PentF
.2932 g 5244 3465 PentF
.2479 g 5244 3783 PentF
.2421 g 5244 4099 PentF
.2765 g 5244 4417 PentF
.3258 g 5244 4734 PentF
.3516 g 5244 5052 PentF
.3247 g 5244 5369 PentF
.2421 g 5244 5687 PentF
.1312 g 5244 6004 PentF
.0369 g 5244 6322 PentF
.0234 g 5562 1560 PentF
.0835 g 5562 1878 PentF
.1546 g 5562 2195 PentF
.2082 g 5562 2513 PentF
.2265 g 5562 2830 PentF
.2101 g 5562 3148 PentF
.1765 g 5562 3465 PentF
.1495 g 5562 3783 PentF
.146 g 5562 4099 PentF
.1664 g 5562 4417 PentF
.1957 g 5562 4734 PentF
.2108 g 5562 5052 PentF
.1945 g 5562 5369 PentF
.1449 g 5562 5687 PentF
.0785 g 5562 6004 PentF
.0221 g 5562 6322 PentF
.0108 g 5879 1560 PentF
.0386 g 5879 1878 PentF
.0715 g 5879 2195 PentF
.0962 g 5879 2513 PentF
.1048 g 5879 2830 PentF
.0973 g 5879 3148 PentF
.0819 g 5879 3465 PentF
.0695 g 5879 3783 PentF
.068 g 5879 4099 PentF
.0774 g 5879 4417 PentF
.0909 g 5879 4734 PentF
.0977 g 5879 5052 PentF
.0902 g 5879 5369 PentF
.0671 g 5879 5687 PentF
.0363 g 5879 6004 PentF
.0102 g 5879 6322 PentF
.0028 g 6197 1560 PentF
.0098 g 6197 1878 PentF
.0182 g 6197 2195 PentF
.0245 g 6197 2513 PentF
.0267 g 6197 2830 PentF
.0248 g 6197 3148 PentF
.0209 g 6197 3465 PentF
.0178 g 6197 3783 PentF
.0175 g 6197 4099 PentF
.0199 g 6197 4417 PentF
.0233 g 6197 4734 PentF
.025 g 6197 5052 PentF
.0231 g 6197 5369 PentF
.0172 g 6197 5687 PentF
.0093 g 6197 6004 PentF
.0026 g 6197 6322 PentF
% End plot #1
1.000 UL
LTb
LCb setrgbcolor
1118 6639 N
0 -5396 V
5396 0 V
0 5396 V
-5396 0 V
Z stroke
1.000 UL
LTb
LCb setrgbcolor
1118 1243 M
0 179 V
stroke
LTb
LCb setrgbcolor
1118 6639 M
0 -179 V
stroke
1118 886 M
[ [(Times-Roman) 350.0 0.0 true true 0 ( 0)]
] -116.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
2017 1243 M
0 179 V
stroke
LTb
LCb setrgbcolor
2017 6639 M
0 -179 V
stroke
2017 886 M
[ [(Times-Roman) 350.0 0.0 true true 0 ( 1)]
] -116.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
2917 1243 M
0 179 V
stroke
LTb
LCb setrgbcolor
2917 6639 M
0 -179 V
stroke
2917 886 M
[ [(Times-Roman) 350.0 0.0 true true 0 ( 2)]
] -116.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
3816 1243 M
0 179 V
stroke
LTb
LCb setrgbcolor
3816 6639 M
0 -179 V
stroke
3816 886 M
[ [(Times-Roman) 350.0 0.0 true true 0 ( 3)]
] -116.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
4715 1243 M
0 179 V
stroke
LTb
LCb setrgbcolor
4715 6639 M
0 -179 V
stroke
4715 886 M
[ [(Times-Roman) 350.0 0.0 true true 0 ( 4)]
] -116.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
5615 1243 M
0 179 V
stroke
LTb
LCb setrgbcolor
5615 6639 M
0 -179 V
stroke
5615 886 M
[ [(Times-Roman) 350.0 0.0 true true 0 ( 5)]
] -116.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
6514 1243 M
0 179 V
stroke
LTb
LCb setrgbcolor
6514 6639 M
0 -179 V
stroke
6514 886 M
[ [(Times-Roman) 350.0 0.0 true true 0 ( 6)]
] -116.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
0.00 0.00 0.00 C 3816 511 M
[ [(Helvetica) 350.0 0.0 true true 0 (r)]
[(Helvetica) 280.0 -105.0 true true 0 (x)]
] -81.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1118 1243 M
179 0 V
stroke
LTb
LCb setrgbcolor
6514 1243 M
-179 0 V
stroke
904 1243 M
[ [(Times-Roman) 350.0 0.0 true true 0 ( 0)]
] -116.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1118 2142 M
179 0 V
stroke
LTb
LCb setrgbcolor
6514 2142 M
-179 0 V
stroke
904 2142 M
[ [(Times-Roman) 350.0 0.0 true true 0 ( 1)]
] -116.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1118 3042 M
179 0 V
stroke
LTb
LCb setrgbcolor
6514 3042 M
-179 0 V
stroke
904 3042 M
[ [(Times-Roman) 350.0 0.0 true true 0 ( 2)]
] -116.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1118 3941 M
179 0 V
stroke
LTb
LCb setrgbcolor
6514 3941 M
-179 0 V
stroke
904 3941 M
[ [(Times-Roman) 350.0 0.0 true true 0 ( 3)]
] -116.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1118 4840 M
179 0 V
stroke
LTb
LCb setrgbcolor
6514 4840 M
-179 0 V
stroke
904 4840 M
[ [(Times-Roman) 350.0 0.0 true true 0 ( 4)]
] -116.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1118 5740 M
179 0 V
stroke
LTb
LCb setrgbcolor
6514 5740 M
-179 0 V
stroke
904 5740 M
[ [(Times-Roman) 350.0 0.0 true true 0 ( 5)]
] -116.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1118 6639 M
179 0 V
stroke
LTb
LCb setrgbcolor
6514 6639 M
-179 0 V
stroke
904 6639 M
[ [(Times-Roman) 350.0 0.0 true true 0 ( 6)]
] -116.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
0.00 0.00 0.00 C 529 3941 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 350.0 0.0 true true 0 (r)]
[(Helvetica) 280.0 -105.0 true true 0 (y)]
] -81.7 MCshow
grestore
stroke gsave	%% draw gray scale smooth box
maxcolors 0 gt {/imax maxcolors def} {/imax 1024 def} ifelse
6649 1243 translate 270 5396 scale 0 setlinewidth
/ystep 1 imax div def /y0 0 def /ii 0 def
{ y0 g 0 y0 N 1 0 V 0 ystep V -1 0 f
/y0 y0 ystep add def /ii ii 1 add def
ii imax ge {exit} if } loop
grestore 0 setgray
1.000 UL
LTb
LCb setrgbcolor
6649 1243 N
270 0 V
0 5396 V
-270 0 V
0 -5396 V
Z stroke
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
6919 1243 M
-126 0 V
stroke
7069 1243 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0)]
] -83.3 MLshow
1.000 UL
LTb
LCb setrgbcolor
6649 1243 M
126 0 V
144 1079 R
-126 0 V
stroke
7069 2322 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.005)]
] -83.3 MLshow
1.000 UL
LTb
LCb setrgbcolor
6649 2322 M
126 0 V
144 1079 R
-126 0 V
stroke
7069 3401 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.01)]
] -83.3 MLshow
1.000 UL
LTb
LCb setrgbcolor
6649 3401 M
126 0 V
144 1079 R
-126 0 V
stroke
7069 4480 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.015)]
] -83.3 MLshow
1.000 UL
LTb
LCb setrgbcolor
6649 4480 M
126 0 V
144 1079 R
-126 0 V
stroke
7069 5559 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.02)]
] -83.3 MLshow
1.000 UL
LTb
LCb setrgbcolor
6649 5559 M
126 0 V
144 1080 R
-126 0 V
stroke
7069 6639 M
[ [(Helvetica) 250.0 0.0 true true 0 ( 0.025)]
] -83.3 MLshow
1.000 UL
LTb
LCb setrgbcolor
6649 6639 M
126 0 V
1.000 UP
stroke
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Helvetica
